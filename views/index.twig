{% extends 'layout.twig' %}

{% block body %}
	<div id="doggosinferno"></div>
	<script>
		var config = {
			type: Phaser.AUTO,
			width: 960, //1920
			height: 540, //1080
    	transparent: true, 
			parent: 'doggosinferno',
			physics: {
				default: 'arcade',
				arcade: {
					// debug: true,
					gravity: { y: 200 }
				}
			},
			scene: {
				preload: preload,
				create: create,
				update: update
			}
		};

		var game = new Phaser.Game(config);
		var phaser = undefined;
		var refreshTimer = null;
		var pillars = [];

		function preload ()
		{
			this.load.image('lava', 'images/lava.png');
			this.load.image('pillar_bottom', 'images/pillar_bottom.png');
			this.load.image('pillar_normal', 'images/pillar_normal.png');
			this.load.image('smoke_cloud', 'images/smoke_cloud.png');
			this.load.image('broken_left', 'images/pillar_brokenl.png');
			this.load.image('broken_right', 'images/pillar_brokenr.png');
			this.load.image('hammer', 'images/hammer.png');
		}

		function create ()
		{
			phaser = this;
			this.game.antialias = true;
			this.game.clearBeforeRender = true;
			startGame();
		}

		function update() {
		}

		function startGame() {
			phaser.physics.add.staticImage( 150, 420, "lava" );
			phaser.physics.add.staticImage( 150, 400, "pillar_bottom" );
			phaser.physics.add.staticImage( 150, 340, "pillar_normal" );
			phaser.physics.add.staticImage( 150, 280, "pillar_normal" );
		}

		function getRandomInt(max) {
		  return Math.floor(Math.random() * Math.floor(max));
		}

		var client = null;

		$( document ).ready(function() {
			// $("#fluffinko").hide();

			var options = {
				options: {
					debug: false
				},
				connection: {
					reconnect: true,
				},
				identity: {
					username: "{{ username }}",
				    password: "{{ oauth }}"
				},
				channels: ["#{{ username }}"]
			};

			client = new tmi.client(options);

			// Connect the client to the server..
			client.connect();

			client.on("chat", function (channel, userstate, message, self) {
				// if( message == "!boingboing" ) {
				// 	addUser( userstate["display-name"] );

				// 	// $("#fluffinko").show();
				// 	// if( refreshTimer ) {
				// 	// 	clearTimeout( refreshTimer );
				// 	// }
				// 	// refreshTimer = setTimeout(() => {
				// 	// 	location.reload();
				// 	// }, 90000);
				// }
			});
		});
	</script>
{% endblock %}
